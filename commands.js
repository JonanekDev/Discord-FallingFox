const Discord = require("discord.js");
const client = require("./bot");
const embeds = require("./embeds");

class commands {
    constructor () {
    }

    async command (interaction) {
        const config = require("./config.json");
        //TVL on ten k√≥d nƒõkdo fakt ƒçte jo? Se nud√≠≈° nebo co kurva?
        switch (interaction.commandName) {
            case "level":
                const levely69 = require("./levely");
                const Leveluser = interaction.options.getUser("u≈æivatel") || interaction.user;
                const LevelData = await new levely69().GetUserLevel(Leveluser.id);
                let LevelCmdEmbed;
                if (LevelData !== "USERNOTFOUND") {
                    LevelCmdEmbed = new Discord.MessageEmbed()
                    .setTitle("‚å®Ô∏è Level u≈æivatele - " + Leveluser.tag + " ‚å®Ô∏è")
                    .setColor("#bd7739")
                    .setThumbnail(Leveluser.displayAvatarURL())
                    .setDescription("U≈æivatel <@" + Leveluser.id +  "> m√° level **" + LevelData.Level + "**, **" + LevelData.EXP + "** EXP≈Ø a celkovƒõ poslal **" + LevelData.CountOfMessages + "** zpr√°v!\n\nChce≈° vidƒõt jak an tom jsou ostatn√≠ u≈æivatel√©? Mrkni na webovej leaderboard: **" + config.leaderboardWeb + "**")
                    .setTimestamp()
                    .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                } else {
                    LevelCmdEmbed = new Discord.MessageEmbed()
                    .setTitle("‚å®Ô∏è Level u≈æivatele - " + Leveluser.tag + " ‚å®Ô∏è")
                    .setColor("#bd7739")
                    .setThumbnail(Leveluser.displayAvatarURL())
                    .setDescription("Level u≈æivatele <@" + Leveluser.id + "> nebyl nalezen! U≈æivatel nenapsal je≈°tƒõ ani jednu zpr√°vu.")
                    .setTimestamp()
                    .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                }
                interaction.reply({ embeds: [LevelCmdEmbed] });
                break;


            case "levely-role":
                let roleZaLevely;
                config.rolesForLevels.forEach((role, index) => {
                    if (index == 0) {
                        roleZaLevely = "**" + role.roleName + "** - Pot≈ôebn√Ω level: " + role.levelNeeded;
                    } else {
                        roleZaLevely += "\n**" + role.roleName + "** - Pot≈ôebn√Ω level: " + role.levelNeeded;
                    }
                })
                const LevelyRoleEmbed = new Discord.MessageEmbed()
                .setTitle("‚å®Ô∏è Role z√≠skateln√© za levely ‚å®Ô∏è")
                .setColor("#bd7739")
                .setDescription(roleZaLevely)
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [LevelyRoleEmbed] });
                break;


            case "linky":
                const LinkyEmbed = new Discord.MessageEmbed()
                .setTitle("üñ•Ô∏è D≈Øle≈æit√© odkazy üñ•Ô∏è")
                .setColor("#bd7739")
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                config.linky.forEach((link) => {
                    LinkyEmbed.addField(link.nadpis, link.link, true);
                })
                interaction.reply({ embeds: [LinkyEmbed] });
                break;


            case "avatar":
                const avatarUser = interaction.options.getUser("u≈æivatel") || interaction.user;
                const AvatarEmbed = new Discord.MessageEmbed()
                .setTitle("‚≠ê Hodnocen√≠ avataru u≈æivatele " + avatarUser.tag + " ‚≠ê")
                .setColor("#bd7739")
                .setDescription(config.avatarRecenze[Math.floor(Math.random() * config.avatarRecenze.length)])
                .setImage(avatarUser.displayAvatarURL())
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [AvatarEmbed] });
                break;


            case "slap":
                const slapUser = interaction.options.getUser("u≈æivatel");
                const SlapEmbed = new Discord.MessageEmbed()
                .setTitle("‚úã Let√≠ facka nƒõco si p≈ôej ‚úã")
                .setColor("#bd7739")
                .setDescription("Hej <@" + slapUser.id + "> let√≠ pro tebe facka od <@" + interaction.user.id + ">")
                .setImage(config.slapGify[Math.floor(Math.random() * config.slapGify.length)])
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [SlapEmbed] });
                break;
            
            
            case "anketa":
                const client1 = require("./bot");
                const anketa = interaction.options.getString("anketa");
                const AnketaEmbed = new Discord.MessageEmbed()
                .setTitle("ü§î ANKETA! ü§î")
                .setColor("#bd7739")
                .setDescription("**" + anketa + "**\n\n(üëç - Ano, ü§∑ - Nev√≠m, üëé - Ne)")
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                client1.channels.cache.get(config.anketaChannelID).send({ embeds: [AnketaEmbed] })
                .then((botMsg) => {
                    botMsg.react("üëç");
                    botMsg.react("ü§∑");
                    botMsg.react("üëé");
                    interaction.reply({ content: "**Hlasov√°n√≠ bylo vytvo≈ôeno v channelu <#" + config.anketaChannelID + ">**", ephemeral: true })
                })
                break; 


            case "leaderboard":
                const levely = require("./levely");
                const leaderboarddata = await new levely().GetLeaderBoard(5, 0)
                let leaderbord;
                leaderboarddata.forEach((clovek, index) => {
                    if (index == 0) {
                        leaderbord = "**" + (index + 1)  + ".** <@" + clovek.DisUserID + "> - Level: " + clovek.Level + ", EXP≈Ø: " + clovek.EXP + ", poƒçet zpr√°v: " + clovek.CountOfMessages;
                    } else {
                        leaderbord += "\n**" + (index + 1)  + ".** <@" + clovek.DisUserID + "> - Level: " + clovek.Level + ", EXP≈Ø: " + clovek.EXP + ", poƒçet zpr√°v: " + clovek.CountOfMessages;
                    }
                })
                leaderbord += "\n\nWebov√Ω leaderboard: **" + config.leaderboardWeb + "**";
                const LeaderboardEmbed = new Discord.MessageEmbed()
                .setTitle("üèÜ Level Leaderboard üèÜ")
                .setColor("#bd7739")
                .setDescription(leaderbord)
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [LeaderboardEmbed] });
                break;


            case "8ball":
                const dotaz = interaction.options.getString("dotaz");
                const BallEmbed = new Discord.MessageEmbed()
                .setTitle("üîÆ 8BALL üîÆ")
                .setColor("#bd7739")
                .setDescription("Zadan√Ω dotaz: \n**" + dotaz + "**\n\nMoje odpovƒõƒè: \n**" + config.EjtBallAnswers[Math.floor(Math.random() * config.EjtBallAnswers.length)] + "**")
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [BallEmbed] });
                break;
            

            case "random-food":
                const axios1 = require("axios");
                axios1.get("https://api.pinktube.eu/api/reddit/FoodPorn/randompost?onlyPhotos=true&noNSFW=true")
                .then((apiData) => {
                    const data = apiData.data;
                    if (data.status == "OK") {
                        const post = data.post;
                        const FoodEmbed = new Discord.MessageEmbed()
                        .setTitle("ü•© N√°hodn√© j√≠dlo ü•©")
                        .setColor("#bd7739")
                        .setDescription("**" + post.title + "**\n\nUpvotes: " + post.ups + ", autor: " + post.author)
                        .setURL(post.postlink)
                        .setImage(post.url)
                        .setTimestamp()
                        .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                        interaction.reply({ embeds: [FoodEmbed] });
                    } else {
                        interaction.reply({ embeds: [new embeds().ErrEmbed("nepoda≈ôilo se z√≠skat n√°hodn√© j√≠dlo", "Zkuste to znovu pozdƒõji", interaction.user)] });
                    }
                })
                .catch((err) => {
                    interaction.reply({ embeds: [new embeds().ErrEmbed("p≈ôi z√≠sk√°v√°n√≠ j√≠dla nastala kritick√° chyba", "Kontaktujte tv≈Ørce bota <@781556627899547690>", interaction.user)] });
                    console.log("[ERROR] Nepoda≈ôilo se z√≠skat data z API pro n√°hodn√© j√≠dlo, chyba: " + err)
                })
                break;

                
            case "poƒças√≠":
                const axios2 = require("axios");
                axios2.get("https://api.pinktube.eu/api/weather/" + encodeURI(interaction.options.getString("mƒõsto")) + "/current")
                .then((apiData) => {
                    const data = apiData.data;
                    if (data.status !== "KO") {
                        const VychodSLunce = new Date((data.sys.sunrise * 1000));
                        const ZapadSLunce = new Date((data.sys.sunset * 1000));
                        const srazky = (data.rain == undefined) ? 0:data.rain["1h"];
                        const snih = (data.snow == undefined) ? 0:data.rain["1h"];
                        const PocasiEmbed = new Discord.MessageEmbed()
                        .setTitle("üåû Poƒças√≠ - " + data.name + "üåû")
                        .setColor("#bd7739")
                        .addField("üåû Poƒças√≠ üåû", data.weather[0].description, true)
                        .addField("üå°Ô∏è Aktu√°ln√≠ teplota üå°Ô∏è", data.main.temp + "¬∞C", true)
                        .addField("üñêÔ∏è Aktu√°ln√≠ pocitov√° teplota üñêÔ∏è", data.main.feels_like + "¬∞C", true)
                        .addField("üçπ Vlhkost üçπ", data.main.humidity + "%", true)
                        .addField("üåÖ V√Ωchod slunce üåÖ", VychodSLunce.getDate() + ". " + (VychodSLunce.getMonth() + 1) + ". " + VychodSLunce.getHours() + ":" + VychodSLunce.getMinutes(), true)
                        .addField("üåá Z√°pad slunce üåá", ZapadSLunce.getDate() + ". " + (ZapadSLunce.getMonth() + 1) + ". " + ZapadSLunce.getHours() + ":" + ZapadSLunce.getMinutes(), true)
                        .addField("üßØ Tlak üßØ", data.main.pressure + "hPa", true)
                        .addField("üí® Rychlost vƒõtru üí®", data.wind.speed + "m/s", true)
                        .addField("‚òÅÔ∏è Mraƒçnost ‚òÅÔ∏è", data.clouds.all + "%", true)
                        .addField("üåßÔ∏è Sr√°≈æky za posledn√≠ hodinu üåßÔ∏è", srazky + "mm", true)
                        .addField("‚ùÑÔ∏è Nasnƒõ≈æeno za posledn√≠ hodinu ‚ùÑÔ∏è", snih + "mm", true)
                        .setThumbnail("http://openweathermap.org/img/wn/" + data.weather[0].icon + "@2x.png")
                        .setTimestamp()
                        .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                        interaction.reply({ embeds: [PocasiEmbed] });
                    } else {
                        interaction.reply({ embeds: [new embeds().ErrEmbed("zadan√© mƒõsto nejsp√≠≈°e neexistuje", "Zadej nƒõjak√© pƒõkn√© mƒõsto jako je t≈ôeba Prostƒõjov", interaction.user)] });
                    }
                })
                .catch((err) => {
                    interaction.reply({ embeds: [new embeds().ErrEmbed("p≈ôi z√≠sk√°v√°n√≠ j√≠dla nastala kritick√° chyba", "Kontaktujte tv≈Ørce bota <@781556627899547690>", interaction.user)] });
                    console.log("[ERROR] Nepoda≈ôilo se z√≠skat data z API pro n√°hodn√© j√≠dlo, chyba: " + err)
                })
                break;

             
            case "user-info":
                const client2 = require("./bot");
                const user = interaction.options.getUser("u≈æivatel");
                const member = client2.guilds.cache.get(config.guildID).members.cache.get(user.id);
                const datumVytvoreniUctu = user.createdAt;
                const datumPripojeni = member.joinedAt;
                const bannable = (member.bannable == false) ? "Ne":"Ano";
                const bot = (user.bot == false) ? "Ne":"Ano";
                const UserInfoEmbed = new Discord.MessageEmbed()
                .setTitle("üôé Informace o u≈æivateli - " + user.tag + "üôé")
                .setColor("#bd7739")
                .addField("ID U≈æivatele", user.id, true)
                .addField("Datum vytvo≈ôen√≠ √∫ƒçtu", datumVytvoreniUctu.getDate() + ". " + (datumVytvoreniUctu.getMonth() + 1) + ". " + datumVytvoreniUctu.getFullYear() + " " + datumVytvoreniUctu.getHours() + ":" + datumVytvoreniUctu.getMinutes(), true)
                .addField("Datum p≈ôipojen√≠ na server", datumPripojeni.getDate() + ". " + (datumPripojeni.getMonth() + 1) + ". " + datumPripojeni.getFullYear() + " " + datumPripojeni.getHours() + ":" + datumPripojeni.getMinutes(), true)
                .addField("P≈ôezd√≠vka na serveru", member.displayName, true)
                .addField("Nejvy≈°≈°√≠ role na serveru", String(member.roles.highest), true)
                .addField("M≈Ø≈æu ho zabanovat?", bannable, true)
                .addField("Je to bot?", bot)
                .setThumbnail(user.displayAvatarURL())
                .setTimestamp()
                .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                interaction.reply({ embeds: [UserInfoEmbed] });
                break;

            
            case "clear":
                interaction.channel.bulkDelete(interaction.options.getInteger("poƒçet"))
                .then((del) => {
                    const ClearEmbed = new Discord.MessageEmbed()
                    .setColor("#bd7739")
                    .setTitle("üìù Probƒõhlo smaz√°n√≠ zpr√°v! üìù")
                    .setDescription("Bylo smaz√°no **" + del.size + "** zpr√°v")
                    .setTimestamp()
                    .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                    interaction.reply({ embeds: [ClearEmbed] });
                })
                break;
            
            
            case "random-reddit":
                const axios3 = require("axios");
                axios3.get("https://api.pinktube.eu/api/reddit/" + interaction.options.getString("reddit") + "/randompost?onlyPhotos=true&noNSFW=true")
                .then((apiData) => {
                    const data = apiData.data;
                    if (data.status == "OK") {
                        const post = data.post;
                        const RandomRedditEmbed = new Discord.MessageEmbed()
                        .setTitle("üëÄ N√°hodn√Ω post z Redditu - " + interaction.options.getString("reddit") + " üëÄ")
                        .setColor("#bd7739")
                        .setDescription("**" + post.title + "**\n\nUpvotes: " + post.ups + ", autor: " + post.author)
                        .setURL(post.postlink)
                        .setImage(post.url)
                        .setTimestamp()
                        .setFooter("FallingFox v3 | " + interaction.user.tag, interaction.user.displayAvatarURL());
                        interaction.reply({ embeds: [RandomRedditEmbed] });
                    } else if (data.errCode == 1) {
                        interaction.reply({ embeds: [new embeds().ErrEmbed("nepoda≈ôilo se n√°m na zadan√©m Redditu naj√≠t post, kter√Ω by nebyl NSFW a nebyl video", "Zadej nƒõjakej slu≈°nej Reddit kde jsou sp√≠≈° obr√°zky", interaction.user)] });
                    } else {
                        nteraction.reply({ embeds: [new embeds().ErrEmbed("nepoda≈ôilo se naj√≠t hledan√Ω Reddit", "Zadej nƒõjakej kvalitn√≠ jako je t≈ôeba Duklock", interaction.user)] });
                    }

                })
                .catch((err) => {
                    interaction.reply({ embeds: [new embeds().ErrEmbed("p≈ôi z√≠sk√°v√°n√≠ post≈Ø nastala kritick√° chyba", "Kontaktujte tv≈Ørce bota <@781556627899547690>", interaction.user)] });
                    console.log("[ERROR] Nepoda≈ôilo se z√≠skat data z API pro n√°hodn√Ω post, chyba: " + err)
                })
                break;


            case "sourcecode":
                interaction.reply( {content: "https://github.com/JonanekDev/Discord-FallingFox"} );
                break;


            default:
                interaction.reply({ embeds: [new embeds().ErrEmbed("zadan√Ω p≈ô√≠kaz nebyl nalezen v botovi", "Kontaktujte tv≈Ørce bota <@781556627899547690>", interaction.user)] });
                break;
        }
    }
}

module.exports = commands;